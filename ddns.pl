#!/usr/bin/perl
# nsupdate based ddns script, draft
#
# Copyright (c) 2011 - Olof Johansson <olof@ethup.se>
# All rights reserved.
# 
# This program is free software; you can redistribute it and/or 
# modify it under the same terms as Perl itself.

# Dependencies:
# * LWP
# * Regexp::Common
# * Regexp::IPv6
# * Net::Bind::Update (not published on CPAN yet)

use warnings;
use strict;
use LWP::Simple qw/get/;
use Net::Bind9::Update;
use Regexp::Common qw/net/;
use Regexp::IPv6 qw/$IPv6_re/;

my $host = 'asimov';
my $origin = 'ddns.x20.se.';
my $datadir = '/var/lib/nsddns';
my $keyfile = './Kkey-asimov.+157+12490'; # keyfile generated by dnssec-keygen 
my $ttl = 600;

# the extsrces should be hosts that you trust, optimally using https
my $extsrc4 = 'http://ipv4.ethup.se/cgi-bin/ip.cgi';
my $extsrc6 = 'http://ipv6.ethup.se/cgi-bin/ip.cgi';

my $fh;
my ($ipv4, $ipv6);
my $currentf = "$datadir/current";

if(-f $currentf) {
	open $fh, '<', $currentf or die("failed opening $currentf: $!");
	while(<$fh>) {
		my ($key, $val) = split /,/;
		$ipv4 = $val if $key eq 'ipv4';
		$ipv6 = $val if $key eq 'ipv6';
	}
	close $fh;
}

my $nsupdate = Net::Bind9::Update->new(
	origin => $origin,
	ttl => $ttl,
	keyfile => $keyfile,
	datadir => $datadir,
);

my $exec = 0;
$nsupdate->del(name=>$host);
print "update delete $host.$origin\n";

if($extsrc4) {
	my $addr = get($extsrc4);

	if(defined $addr and $addr =~ /^$RE{net}{IPv4}$/ and 
	   (not defined $ipv4 or $addr ne $ipv4)) {
		print "update add $host.$origin $ttl A $addr\n";
		$ipv4 = $addr;
		$nsupdate->add(
			name=>$host,
			type=>'A',
			data=>$addr,
		);
		$exec = 1;
	} else {
		$ipv4 = undef;
	}
} elsif(defined $ipv4) {
	$ipv4 = undef;
	$exec = 1;
}

if($extsrc6) {
	my $addr = get($extsrc6);

	if(defined $addr and $addr =~ /^$IPv6_re$/ and
	   (not defined $ipv6 or $addr ne $ipv6)) {
		print "update add $host.$origin $ttl AAAA $addr\n";
		$ipv6 = $addr;
		$nsupdate->add(
			name=>$host,
			type=>'AAAA',
			data=>$addr,
		);
		$exec = 1;
	} else {
		$ipv6 = undef;
	}
} elsif(defined $ipv6) {
	$ipv6 = undef;
	$exec = 1;
}

if($exec) {
	$nsupdate->execute() or die("oops");

	open $fh, '>', $currentf or die("failed opening $currentf: $!");
	print $fh "ipv4,$ipv4" if defined $ipv4;
	print $fh "ipv6,$ipv6" if defined $ipv6;
	close $fh;
}

